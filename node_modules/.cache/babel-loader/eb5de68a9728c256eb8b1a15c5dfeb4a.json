{"ast":null,"code":"\"use strict\";\n\nimport axios from \"axios\";\nimport createHmac from \"create-hmac\";\nimport OAuth from \"oauth-1.0a\";\nimport Url from \"url-parse\";\n/**\n * WooCommerce REST API wrapper\n *\n * @param {Object} opt\n */\n\nexport default class WooCommerceRestApi {\n  /**\n   * Class constructor.\n   *\n   * @param {Object} opt\n   */\n  constructor(opt) {\n    if (!(this instanceof WooCommerceRestApi)) {\n      return new WooCommerceRestApi(opt);\n    }\n\n    opt = opt || {};\n\n    if (!opt.url) {\n      throw new OptionsException(\"url is required\");\n    }\n\n    if (!opt.consumerKey) {\n      throw new OptionsException(\"consumerKey is required\");\n    }\n\n    if (!opt.consumerSecret) {\n      throw new OptionsException(\"consumerSecret is required\");\n    }\n\n    this.classVersion = \"1.0.1\";\n\n    this._setDefaultsOptions(opt);\n  }\n  /**\n   * Set default options\n   *\n   * @param {Object} opt\n   */\n\n\n  _setDefaultsOptions(opt) {\n    this.url = opt.url;\n    this.wpAPIPrefix = opt.wpAPIPrefix || \"wp-json\";\n    this.version = opt.version || \"wc/v3\";\n    this.isHttps = /^https/i.test(this.url);\n    this.consumerKey = opt.consumerKey;\n    this.consumerSecret = opt.consumerSecret;\n    this.encoding = opt.encoding || \"utf8\";\n    this.queryStringAuth = opt.queryStringAuth || false;\n    this.port = opt.port || \"\";\n    this.timeout = opt.timeout;\n    this.axiosConfig = opt.axiosConfig || {};\n  }\n  /**\n   * Parse params object.\n   *\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n\n  _parseParamsObject(params, query) {\n    for (const key in params) {\n      const value = params[key];\n\n      if (typeof value === \"object\") {\n        for (const prop in value) {\n          const itemKey = key.toString() + \"[\" + prop.toString() + \"]\";\n          query[itemKey] = value[prop];\n        }\n      } else {\n        query[key] = value;\n      }\n    }\n\n    return query;\n  }\n  /**\n   * Normalize query string for oAuth\n   *\n   * @param  {String} url\n   * @param  {Object} params\n   *\n   * @return {String}\n   */\n\n\n  _normalizeQueryString(url, params) {\n    // Exit if don't find query string.\n    if (url.indexOf(\"?\") === -1 && Object.keys(params).length === 0) {\n      return url;\n    }\n\n    const query = new Url(url, null, true).query;\n    const values = [];\n    let queryString = \"\"; // Include params object into URL.searchParams.\n\n    this._parseParamsObject(params, query);\n\n    for (const key in query) {\n      values.push(key);\n    }\n\n    values.sort();\n\n    for (const i in values) {\n      if (queryString.length) {\n        queryString += \"&\";\n      }\n\n      queryString += encodeURIComponent(values[i]).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n      queryString += \"=\";\n      queryString += encodeURIComponent(query[values[i]]);\n    }\n\n    return url.split(\"?\")[0] + \"?\" + queryString;\n  }\n  /**\n   * Get URL\n   *\n   * @param  {String} endpoint\n   * @param  {Object} params\n   *\n   * @return {String}\n   */\n\n\n  _getUrl(endpoint, params) {\n    const api = this.wpAPIPrefix + \"/\";\n    let url = this.url.slice(-1) === \"/\" ? this.url : this.url + \"/\";\n    url = url + api + this.version + \"/\" + endpoint; // Include port.\n\n    if (this.port !== \"\") {\n      const hostname = new Url(url).hostname;\n      url = url.replace(hostname, hostname + \":\" + this.port);\n    }\n\n    if (!this.isHttps) {\n      return this._normalizeQueryString(url, params);\n    }\n\n    return url;\n  }\n  /**\n   * Get OAuth\n   *\n   * @return {Object}\n   */\n\n\n  _getOAuth() {\n    const data = {\n      consumer: {\n        key: this.consumerKey,\n        secret: this.consumerSecret\n      },\n      signature_method: \"HMAC-SHA256\",\n      hash_function: (base, key) => {\n        return createHmac(\"sha256\", key).update(base).digest(\"base64\");\n      }\n    };\n    return new OAuth(data);\n  }\n  /**\n   * Do requests\n   *\n   * @param  {String} method\n   * @param  {String} endpoint\n   * @param  {Object} data\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n\n\n  _request(method, endpoint, data, params = {}) {\n    const url = this._getUrl(endpoint, params);\n\n    let options = {\n      url: url,\n      method: method,\n      responseEncoding: this.encoding,\n      timeout: this.timeout,\n      responseType: \"json\",\n      headers: {\n        \"User-Agent\": \"WooCommerce REST API - JS Client/\" + this.classVersion,\n        Accept: \"application/json\"\n      }\n    };\n\n    if (this.isHttps) {\n      if (this.queryStringAuth) {\n        options.params = {\n          consumer_key: this.consumerKey,\n          consumer_secret: this.consumerSecret\n        };\n      } else {\n        options.auth = {\n          username: this.consumerKey,\n          password: this.consumerSecret\n        };\n      }\n\n      options.params = { ...options.params,\n        ...params\n      };\n    } else {\n      options.params = this._getOAuth().authorize({\n        url: url,\n        method: method\n      });\n    }\n\n    if (data) {\n      options.headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\n      options.data = JSON.stringify(data);\n    } // Allow set and override Axios options.\n\n\n    options = { ...options,\n      ...this.axiosConfig\n    };\n    return axios(options);\n  }\n  /**\n   * GET requests\n   *\n   * @param  {String} endpoint\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n\n\n  get(endpoint, params = {}) {\n    return this._request(\"get\", endpoint, null, params);\n  }\n  /**\n   * POST requests\n   *\n   * @param  {String} endpoint\n   * @param  {Object} data\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n\n\n  post(endpoint, data, params = {}) {\n    return this._request(\"post\", endpoint, data, params);\n  }\n  /**\n   * PUT requests\n   *\n   * @param  {String} endpoint\n   * @param  {Object} data\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n\n\n  put(endpoint, data, params = {}) {\n    return this._request(\"put\", endpoint, data, params);\n  }\n  /**\n   * DELETE requests\n   *\n   * @param  {String} endpoint\n   * @param  {Object} params\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n\n\n  delete(endpoint, params = {}) {\n    return this._request(\"delete\", endpoint, null, params);\n  }\n  /**\n   * OPTIONS requests\n   *\n   * @param  {String} endpoint\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n\n\n  options(endpoint, params = {}) {\n    return this._request(\"options\", endpoint, null, params);\n  }\n\n}\n/**\n * Options Exception.\n */\n\nexport class OptionsException {\n  /**\n   * Constructor.\n   *\n   * @param {String} message\n   */\n  constructor(message) {\n    this.name = \"Options Error\";\n    this.message = message;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/stoce/Documents/GitHub/touristos/node_modules/@woocommerce/woocommerce-rest-api/index.mjs"],"names":["axios","createHmac","OAuth","Url","WooCommerceRestApi","constructor","opt","url","OptionsException","consumerKey","consumerSecret","classVersion","_setDefaultsOptions","wpAPIPrefix","version","isHttps","test","encoding","queryStringAuth","port","timeout","axiosConfig","_parseParamsObject","params","query","key","value","prop","itemKey","toString","_normalizeQueryString","indexOf","Object","keys","length","values","queryString","push","sort","i","encodeURIComponent","replace","split","_getUrl","endpoint","api","slice","hostname","_getOAuth","data","consumer","secret","signature_method","hash_function","base","update","digest","_request","method","options","responseEncoding","responseType","headers","Accept","consumer_key","consumer_secret","auth","username","password","authorize","JSON","stringify","get","post","put","delete","message","name"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport axios from \"axios\";\nimport createHmac from \"create-hmac\";\nimport OAuth from \"oauth-1.0a\";\nimport Url from \"url-parse\";\n\n/**\n * WooCommerce REST API wrapper\n *\n * @param {Object} opt\n */\nexport default class WooCommerceRestApi {\n  /**\n   * Class constructor.\n   *\n   * @param {Object} opt\n   */\n  constructor(opt) {\n    if (!(this instanceof WooCommerceRestApi)) {\n      return new WooCommerceRestApi(opt);\n    }\n\n    opt = opt || {};\n\n    if (!opt.url) {\n      throw new OptionsException(\"url is required\");\n    }\n\n    if (!opt.consumerKey) {\n      throw new OptionsException(\"consumerKey is required\");\n    }\n\n    if (!opt.consumerSecret) {\n      throw new OptionsException(\"consumerSecret is required\");\n    }\n\n    this.classVersion = \"1.0.1\";\n    this._setDefaultsOptions(opt);\n  }\n\n  /**\n   * Set default options\n   *\n   * @param {Object} opt\n   */\n  _setDefaultsOptions(opt) {\n    this.url = opt.url;\n    this.wpAPIPrefix = opt.wpAPIPrefix || \"wp-json\";\n    this.version = opt.version || \"wc/v3\";\n    this.isHttps = /^https/i.test(this.url);\n    this.consumerKey = opt.consumerKey;\n    this.consumerSecret = opt.consumerSecret;\n    this.encoding = opt.encoding || \"utf8\";\n    this.queryStringAuth = opt.queryStringAuth || false;\n    this.port = opt.port || \"\";\n    this.timeout = opt.timeout;\n    this.axiosConfig = opt.axiosConfig || {};\n  }\n\n  /**\n   * Parse params object.\n   *\n   * @param {Object} params\n   * @param {Object} query\n   */\n  _parseParamsObject(params, query) {\n    for (const key in params) {\n      const value = params[key];\n\n      if (typeof value === \"object\") {\n        for (const prop in value) {\n          const itemKey = key.toString() + \"[\" + prop.toString() + \"]\";\n          query[itemKey] = value[prop];\n        }\n      } else {\n        query[key] = value;\n      }\n    }\n\n    return query;\n  }\n\n  /**\n   * Normalize query string for oAuth\n   *\n   * @param  {String} url\n   * @param  {Object} params\n   *\n   * @return {String}\n   */\n  _normalizeQueryString(url, params) {\n    // Exit if don't find query string.\n    if (url.indexOf(\"?\") === -1 && Object.keys(params).length === 0) {\n      return url;\n    }\n\n    const query = new Url(url, null, true).query;\n    const values = [];\n\n    let queryString = \"\";\n\n    // Include params object into URL.searchParams.\n    this._parseParamsObject(params, query);\n\n    for (const key in query) {\n      values.push(key);\n    }\n    values.sort();\n\n    for (const i in values) {\n      if (queryString.length) {\n        queryString += \"&\";\n      }\n\n      queryString += encodeURIComponent(values[i])\n        .replace(/%5B/g, \"[\")\n        .replace(/%5D/g, \"]\");\n      queryString += \"=\";\n      queryString += encodeURIComponent(query[values[i]]);\n    }\n\n    return url.split(\"?\")[0] + \"?\" + queryString;\n  }\n\n  /**\n   * Get URL\n   *\n   * @param  {String} endpoint\n   * @param  {Object} params\n   *\n   * @return {String}\n   */\n  _getUrl(endpoint, params) {\n    const api = this.wpAPIPrefix + \"/\";\n\n    let url = this.url.slice(-1) === \"/\" ? this.url : this.url + \"/\";\n\n    url = url + api + this.version + \"/\" + endpoint;\n\n    // Include port.\n    if (this.port !== \"\") {\n      const hostname = new Url(url).hostname;\n\n      url = url.replace(hostname, hostname + \":\" + this.port);\n    }\n\n    if (!this.isHttps) {\n      return this._normalizeQueryString(url, params);\n    }\n\n    return url;\n  }\n\n  /**\n   * Get OAuth\n   *\n   * @return {Object}\n   */\n  _getOAuth() {\n    const data = {\n      consumer: {\n        key: this.consumerKey,\n        secret: this.consumerSecret\n      },\n      signature_method: \"HMAC-SHA256\",\n      hash_function: (base, key) => {\n        return createHmac(\"sha256\", key)\n          .update(base)\n          .digest(\"base64\");\n      }\n    };\n\n    return new OAuth(data);\n  }\n\n  /**\n   * Do requests\n   *\n   * @param  {String} method\n   * @param  {String} endpoint\n   * @param  {Object} data\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n  _request(method, endpoint, data, params = {}) {\n    const url = this._getUrl(endpoint, params);\n\n    let options = {\n      url: url,\n      method: method,\n      responseEncoding: this.encoding,\n      timeout: this.timeout,\n      responseType: \"json\",\n      headers: {\n        \"User-Agent\": \"WooCommerce REST API - JS Client/\" + this.classVersion,\n        Accept: \"application/json\"\n      }\n    };\n\n    if (this.isHttps) {\n      if (this.queryStringAuth) {\n        options.params = {\n          consumer_key: this.consumerKey,\n          consumer_secret: this.consumerSecret\n        };\n      } else {\n        options.auth = {\n          username: this.consumerKey,\n          password: this.consumerSecret\n        };\n      }\n\n      options.params = { ...options.params, ...params };\n    } else {\n      options.params = this._getOAuth().authorize({\n        url: url,\n        method: method\n      });\n    }\n\n    if (data) {\n      options.headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\n      options.data = JSON.stringify(data);\n    }\n\n    // Allow set and override Axios options.\n    options = { ...options, ...this.axiosConfig };\n\n    return axios(options);\n  }\n\n  /**\n   * GET requests\n   *\n   * @param  {String} endpoint\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n  get(endpoint, params = {}) {\n    return this._request(\"get\", endpoint, null, params);\n  }\n\n  /**\n   * POST requests\n   *\n   * @param  {String} endpoint\n   * @param  {Object} data\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n  post(endpoint, data, params = {}) {\n    return this._request(\"post\", endpoint, data, params);\n  }\n\n  /**\n   * PUT requests\n   *\n   * @param  {String} endpoint\n   * @param  {Object} data\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n  put(endpoint, data, params = {}) {\n    return this._request(\"put\", endpoint, data, params);\n  }\n\n  /**\n   * DELETE requests\n   *\n   * @param  {String} endpoint\n   * @param  {Object} params\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n  delete(endpoint, params = {}) {\n    return this._request(\"delete\", endpoint, null, params);\n  }\n\n  /**\n   * OPTIONS requests\n   *\n   * @param  {String} endpoint\n   * @param  {Object} params\n   *\n   * @return {Object}\n   */\n  options(endpoint, params = {}) {\n    return this._request(\"options\", endpoint, null, params);\n  }\n}\n\n/**\n * Options Exception.\n */\nexport class OptionsException {\n  /**\n   * Constructor.\n   *\n   * @param {String} message\n   */\n  constructor(message) {\n    this.name = \"Options Error\";\n    this.message = message;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}